@model IEnumerable<Safari.Entities.Paciente>
@{
    ViewBag.Title = "Crear Especie";
    // Description - Used by search engines. Aim for more than 160 characters.
    ViewBag.Description = "Sitio web de la veterinaria safari";
    // Author - (Optional) Used by search engines. The author of the page.
    ViewBag.Author = "Andres Benitez";
    // Referrer - (Optional) Controls what is sent in the HTTP referrer header when a client navigates from your page
    //            to an external site for increased user privacy and security. See ReferrerMode for more information.
    ViewBag.ReferrerMode = ReferrerMode.OriginWhenCrossOrigin;

    // Add Twitter Card and Open Graph social meta tags so we can customize what happens when our page is shared
    // on these social networks. Note that other social networks like Google+, Pintrest and others also use these.
    // There are dozens of different Twitter Card or Open Graph object types we could add, a different one is added
    // on each page as an example.
    // These helpers make it very easy to add the meta tags. For best performance, see what tags are generated and
    // hand code them yourself instead of using these helpers.
    ViewBag.TwitterCard = new SummaryLargeImageTwitterCard("@andres.benitez");
    ViewBag.OpenGraph = new OpenGraphWebsite(
        ViewBag.Title,
        new OpenGraphImage(Url.AbsoluteContent("~/content/icons/open-graph-1200x630.png")) { Height = 630, Type = ContentType.Png, Width = 1200 })
    {
        Determiner = OpenGraphDeterminer.Blank,
        SiteName = Application.Name
    };

    Layout = "~/Views/Shared/_Layout.cshtml";
}

@{
    ViewBag.Title = "Listado de Pacientes";
}

<h2>Listado de Pacientes</h2>


<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.nombre)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.cliente)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.fechaNacimiento)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Especie)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.observacion)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.nombre)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.cliente)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.fechaNacimiento)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Especie)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.observacion)
            </td>
            <td>
                @Html.ActionLink("Ver detalles", "Details", new { id = item.Id }, htmlAttributes: new { @class = "btn btn-sm btn-info", @style = "margin-right: 10px;" })
                @Html.ActionLink("Editar", "Edit", new { id = item.Id }, htmlAttributes: new { @class = "btn btn-sm btn-info", @style = "margin-right: 10px" })
                @Html.ActionLink("Eliminar", "Delete", new { id = item.Id }, htmlAttributes: new { @class = "btn btn-sm btn-danger" })
            </td>
        </tr>
    }

</table>