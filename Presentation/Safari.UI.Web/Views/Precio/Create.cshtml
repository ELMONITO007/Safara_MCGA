@model Safari.Entities.Precio
@{
    ViewBag.Title = "Crear Especie";
    // Description - Used by search engines. Aim for more than 160 characters.
    ViewBag.Description = "Sitio web de la veterinaria safari";
    // Author - (Optional) Used by search engines. The author of the page.
    ViewBag.Author = "Andres Benitez";
    // Referrer - (Optional) Controls what is sent in the HTTP referrer header when a client navigates from your page
    //            to an external site for increased user privacy and security. See ReferrerMode for more information.
    ViewBag.ReferrerMode = ReferrerMode.OriginWhenCrossOrigin;

    // Add Twitter Card and Open Graph social meta tags so we can customize what happens when our page is shared
    // on these social networks. Note that other social networks like Google+, Pintrest and others also use these.
    // There are dozens of different Twitter Card or Open Graph object types we could add, a different one is added
    // on each page as an example.
    // These helpers make it very easy to add the meta tags. For best performance, see what tags are generated and
    // hand code them yourself instead of using these helpers.
    ViewBag.TwitterCard = new SummaryLargeImageTwitterCard("@andres.benitez");
    ViewBag.OpenGraph = new OpenGraphWebsite(
        ViewBag.Title,
        new OpenGraphImage(Url.AbsoluteContent("~/content/icons/open-graph-1200x630.png")) { Height = 630, Type = ContentType.Png, Width = 1200 })
    {
        Determiner = OpenGraphDeterminer.Blank,
        SiteName = Application.Name
    };

    Layout = "~/Views/Shared/_Layout.cshtml";
}

@{
    ViewBag.Title = "Crear";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Crear</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Precio</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.tipoServicioID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.tipoServicioID, (SelectList)ViewBag.TipoServicio, "Seleccionar", new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.fechaDesde, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.fechaDesde, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.fechaDesde, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.fechaHasta, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.fechaHasta, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.fechaHasta, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.valor, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.valor, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.valor, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Crear" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Volver a la lista", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
